{"version":3,"sources":["lib/algUtil.js","lib/twophase.js","Home.tsx","Trainer.tsx","RecapTrainer.tsx","App.tsx","index.tsx"],"names":["algUtil","faceList","rotateX","rotateXPrime","rotateX2","rotateY","rotateYPrime","rotateY2","rotateZ","rotateZPrime","rotateZ2","rotate","rotateList","resultFaceList","i","notationToIndex","notation","index","notationConversionList","convertAlgToDefaultNotationAndRotation","notationList","resultNotationList","foundNotation","find","pair","push","length","join","split","makeRotationLessAlg","currentFaceList","modifiedNotationList","resultRotationList","currentNotation","resultNotation","module","exports","twophase","moveName","moveObject","restrictedMove","Cnk","twistTable","flipTable","eSliceTable","cPTable","UDEPTable","eSliceTable2","twistESlicePrun","flipESlicePrun","cPESlicePrun","UDEPESlicePrun","initialized","getTwist","obj","ret","co","getFlip","eo","getESlice","s","ep","getCP","tmp","flag","cp","fact","bitCount","getUDEP","getESlice2","cur","setTwist","idx","tw","setFlip","fl","setESlice","setCP","arr","splice","setUDEP","setESlice2","getCornerParity","p","getEdgeParity","initTwistTable","create2DArray","j","obj_0","ArrayCube","apply","initFlipTable","initESliceTable","initCPTable","initUDEPTable","initESliceTable2","initTwistESlicePrun","children1","children2","done","depth","Array","fill","initFlipESlicePrun","initCPESlicePrun","initUDEPESlicePrun","this","move","map","IndexCubePhase1","IndexCubePhase2","twist","flip","eslice","newTwist","newFlip","newESlice","newMove","slice","udep","eslice2","newCp","newUDEP","newESlice2","_move","indexOf","search","root","max","stack","_stack","root1","root2","_root","toIndexPhase1","Stack","nextMove","nextFace","curFace","size","pop","copy","toIndexPhase2","_depth","_cur","_nextMove","_nextFace","_curFace","concat","Math","getRandomState","seed","random","Random","randomInt","setEP","cancelMoves","moves","l","axisList","suffixList","newFaceList","newAxisList","newSuffixList","cancelled","swapElement","bits","n","l1","l2","x","y","z","w","floor","Date","now","t","abs","_random","heap","item","unshift","shift","initialize","U","F","R","D","B","L","initUtil","solve","scramble","_solution","solution","forEach","val","getScramble","scr","reverse","console","log","Home","props","classes","makeStyles","createStyles","container","margin","padding","maxWidth","box","marginBottom","error","color","button","marginLeft","useStyles","useState","algList","setAlgList","isError","setIsError","useEffect","twoPhase","location","state","AppBar","position","Toolbar","Typography","Box","className","display","flexDirection","justifyContent","Button","variant","onClick","setTimeout","history","pathname","TextField","id","multiline","rows","defaultValue","onChange","event","target","value","Trainer","prevScrambleBlock","backgroundColor","scrambleBlock","imageBlock","timerBlock","timeListTitleBlock","timeListBlock","height","overflow","intervalRef","useRef","time","setTime","isTimerRunning","setIsTimerRunning","timeList","setTimeList","setScramble","prevScramble","setPrevScramble","zbllList","setZbllList","zblsFrList","setZblsFrList","zblsBrList","setZblsBrList","zblsFlList","setZblsFlList","zblsBlList","setZblsBlList","fetch","process","then","res","text","list","algListInState","startGame","document","onkeydown","code","operateGame","endGame","startTimer","aufList","slotIndex","zblsIndex","auf1Index","zbllIndex","auf2Index","alg","newRotationLessSolutionList","stopTimer","moment","format","current","setInterval","c","clearInterval","src","replace","alt","alignItems","flexGrow","onTouchStart","RecapTrainer","algCount","setAlgCount","finishText","setFinishText","randomAlgList","array","shuffleArray","App","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ce0f9365.chunk.js","sourcesContent":["const algUtil = (function () {\n    let faceList = [\"U\", \"R\", \"F\", \"D\", \"L\", \"B\"]\n    const rotateX = [2, 1, 3, 5, 4, 0]\n    const rotateXPrime = [5, 1, 0, 2, 4, 3]\n    const rotateX2 = [3, 1, 5, 0, 4, 2]\n    const rotateY = [0, 5, 1, 3, 2, 4]\n    const rotateYPrime = [0, 2, 4, 3, 5, 1]\n    const rotateY2 = [0, 4, 5, 3, 1, 2]\n    const rotateZ = [4, 0, 2, 1, 3, 5]\n    const rotateZPrime = [1, 3, 2, 4, 0, 5]\n    const rotateZ2 = [3, 4, 2, 0, 1, 5]\n\n    const rotate = (faceList, rotateList) => {\n        const resultFaceList = [0, 1, 2, 3, 4, 5]\n        for (let i = 0; i < 6; i++) {\n            resultFaceList[i] = faceList[rotateList[i]]\n        }\n        return resultFaceList\n    }\n\n    const notationToIndex = (notation) => {\n        let index\n        switch (notation) {\n            case \"U\": {\n                index = 0\n                break\n            }\n            case \"R\": {\n                index = 1\n                break\n            }\n            case \"F\": {\n                index = 2\n                break\n            }\n            case \"D\": {\n                index = 3\n                break\n            }\n            case \"L\": {\n                index = 4\n                break\n            }\n            case \"B\": {\n                index = 5\n                break\n            }\n            default: {\n                index = 0\n                break\n            }\n        }\n        return index\n    }\n\n    const makeRotationLessAlg = (notationList) => {\n        let currentFaceList = [0, 1, 2, 3, 4, 5]\n        const modifiedNotationList = convertAlgToDefaultNotationAndRotation(notationList)\n        const resultNotationList = []\n        const resultRotationList = []\n        for (let i = 0; i < modifiedNotationList.length; i++) {\n            if (modifiedNotationList[i] === \"x\") {\n                currentFaceList = rotate(currentFaceList, rotateX)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"x'\") {\n                currentFaceList = rotate(currentFaceList, rotateXPrime)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"x2\") {\n                currentFaceList = rotate(currentFaceList, rotateX2)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"y\") {\n                currentFaceList = rotate(currentFaceList, rotateY)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"y'\") {\n                currentFaceList = rotate(currentFaceList, rotateYPrime)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"y2\") {\n                currentFaceList = rotate(currentFaceList, rotateY2)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"z\") {\n                currentFaceList = rotate(currentFaceList, rotateZ)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"z'\") {\n                currentFaceList = rotate(currentFaceList, rotateZPrime)\n                resultRotationList.push(modifiedNotationList[i])\n            } else if (modifiedNotationList[i] === \"z2\") {\n                currentFaceList = rotate(currentFaceList, rotateZ2)\n                resultRotationList.push(modifiedNotationList[i])\n            } else {\n                const currentNotation = modifiedNotationList[i].split(\"\")\n                let resultNotation = \"\"\n                if (currentNotation.length === 1) {\n                    resultNotation = faceList[currentFaceList[notationToIndex(currentNotation[0])]]\n                } else if (currentNotation.length === 2) {\n                    resultNotation = faceList[currentFaceList[notationToIndex(currentNotation[0])]] + currentNotation[1]\n                }\n                resultNotationList.push(resultNotation)\n            }\n        }\n        return [resultNotationList, resultRotationList]\n    }\n\n    const notationConversionList = [\n        [\"U\", \"U\"],\n        [\"U'\", \"U'\"],\n        [\"U2\", \"U2\"],\n        [\"D\", \"D\"],\n        [\"D'\", \"D'\"],\n        [\"D2\", \"D2\"],\n        [\"R\", \"R\"],\n        [\"R'\", \"R'\"],\n        [\"R2\", \"R2\"],\n        [\"L\", \"L\"],\n        [\"L'\", \"L'\"],\n        [\"L2\", \"L2\"],\n        [\"F\", \"F\"],\n        [\"F'\", \"F'\"],\n        [\"F2\", \"F2\"],\n        [\"B\", \"B\"],\n        [\"B'\", \"B'\"],\n        [\"B2\", \"B2\"],\n        [\"x\", \"x\"],\n        [\"x'\", \"x'\"],\n        [\"x2\", \"x2\"],\n        [\"y\", \"y\"],\n        [\"y'\", \"y'\"],\n        [\"y2\", \"y2\"],\n        [\"z\", \"z\"],\n        [\"z'\", \"z'\"],\n        [\"z2\", \"z2\"],\n        [\"M\", \"R L' x'\"],\n        [\"M'\", \"R' L x\"],\n        [\"M2\", \"R2 L2 x2\"],\n        [\"S\", \"F' B z\"],\n        [\"S'\", \"F B' z'\"],\n        [\"S2\", \"F2 B2 z2\"],\n        [\"E\", \"U D' y'\"],\n        [\"E'\", \"U' D y\"],\n        [\"E2\", \"U2 D2 y2\"],\n        [\"Uw\", \"D y\"],\n        [\"Uw'\", \"D' y'\"],\n        [\"Uw2\", \"D2 y2\"],\n        [\"Dw\", \"U y'\"],\n        [\"Dw'\", \"U' y\"],\n        [\"Dw2\", \"U2 y2\"],\n        [\"Rw\", \"L x\"],\n        [\"Rw'\", \"L' x'\"],\n        [\"Rw2\", \"L2 x2\"],\n        [\"Lw\", \"R x'\"],\n        [\"Lw'\", \"R' x\"],\n        [\"Lw2\", \"R2 x2\"],\n        [\"Fw\", \"B z\"],\n        [\"Fw'\", \"B' z'\"],\n        [\"Fw2\", \"B2 z2\"],\n        [\"Bw\", \"F z'\"],\n        [\"Bw'\", \"F' z\"],\n        [\"Bw2\", \"F2 z2\"],\n        [\"u\", \"D y\"],\n        [\"u'\", \"D' y'\"],\n        [\"u2\", \"D2 y2\"],\n        [\"d\", \"U y'\"],\n        [\"d'\", \"U' y\"],\n        [\"d2\", \"U2 y2\"],\n        [\"r\", \"L x\"],\n        [\"r'\", \"L' x'\"],\n        [\"r2\", \"L2 x2\"],\n        [\"l\", \"R x'\"],\n        [\"l'\", \"R' x\"],\n        [\"l2\", \"R2 x2\"],\n        [\"f\", \"B z\"],\n        [\"f'\", \"B' z'\"],\n        [\"f2\", \"B2 z2\"],\n        [\"b\", \"F z'\"],\n        [\"b'\", \"F' z\"],\n        [\"b2\", \"F2 z2\"],\n    ]\n\n    const convertAlgToDefaultNotationAndRotation = (notationList) => {\n        const resultNotationList = []\n        for (let i = 0; i < notationList.length; i++) {\n            const foundNotation = notationConversionList.find((pair) => pair[0] === notationList[i])\n            resultNotationList.push(foundNotation[1])\n        }\n        return resultNotationList.join(\" \").split(\" \")\n    }\n\n    return {\n        makeRotationLessAlg: makeRotationLessAlg\n    }\n})();\n\nmodule.exports = algUtil","const twophase = (() => {\n\nconst U = 0;\nconst F = 1;\nconst R = 2;\nconst D = 3;\nconst B = 4;\nconst L = 5;\n\nlet moveName;\nlet moveObject;\nlet restrictedMove;\nlet Cnk;\n\nlet twistTable;\nlet flipTable;\nlet eSliceTable;\nlet cPTable;\nlet UDEPTable;\nlet eSliceTable2;\n\nlet twistESlicePrun;\nlet flipESlicePrun;\nlet cPESlicePrun;\nlet UDEPESlicePrun;\n\nlet initialized = false;\n\nconst getTwist = (obj) => {\n  let ret = 0;\n  for (let i = 0; i < 7; i++) {\n    ret *= 3;\n    ret += obj.co[i]\n  }\n  return ret;\n}\n\nconst getFlip = (obj) => {\n  let ret = 0;\n  for (let i = 0; i < 11; i++) {\n    ret *= 2;\n    ret += obj.eo[i]\n  }\n  return ret;\n}\n\nconst getESlice = (obj) => {\n  let ret = 0\n  let s = 4;\n  for (let i = 0; i < 12; i++) {\n    if (obj.ep[i] > 7) {\n      ret += Cnk[11 - i][s--];\n    }\n  }\n  return ret;\n}\n\nconst getCP = (obj) => {\n  let flag = 255;\n  let ret = 0;\n  let tmp;\n  for (let i = 0; i < 8; i++) {\n    tmp = 255 >> 8 - obj.cp[i];\n    ret += fact(7 - i) * bitCount(flag & tmp);\n    flag ^= 1 << obj.cp[i];\n  }\n  return ret;\n}\n\nconst getUDEP = (obj) => {\n  let flag = 255;\n  let ret = 0;\n  let tmp;\n  for (let i = 0; i < 8; i++) {\n    tmp = 255 >> 8 - obj.ep[i];\n    ret += fact(7 - i) * bitCount(flag & tmp);\n    flag ^= 1 << obj.ep[i];\n  }\n  return ret;\n}\n\nconst getESlice2 = (obj) => {\n  let ret = 0\n  let flag = 15;\n  let tmp;\n  let cur;\n  for (let i = 0; i < 4; i++) {\n    cur = obj.ep[i + 8] - 8;\n\n    tmp = 15 >> 4 - cur;\n    ret += fact(3 - i) * bitCount(flag & tmp);\n    flag ^= 1 << cur;\n  }\n  return ret;\n}\n\nconst setTwist = (obj, idx) => {\n  let tw = 0\n  for (let i = 0; i < 7; i++) {\n    obj.co[i] = idx / (3 ** (6 - i)) | 0;\n    tw += obj.co[i];\n    idx = idx % (3 ** (6 - i));\n  }\n  obj.co[7] = (15 - tw) % 3;\n}\n\nconst setFlip = (obj, idx) => {\n  let fl = 0;\n  for (let i = 0; i < 11; i++) {\n    obj.eo[10 - i] = idx & 1;\n    fl += obj.eo[10 - i];\n    idx = idx >>> 1;\n  }\n  obj.eo[11] = (12 - fl) % 2\n}\n\nconst setESlice = (obj, idx) => {\n  let s = 4;\n  for (let i = 0; i < 12; i++) {\n    if (idx >= Cnk[11 - i][s]) {\n      obj.ep[i] = s + 7;\n      idx -= Cnk[11 - i][s--];\n    } else {\n      obj.ep[i] = i - 4 + s;\n    }\n  }\n}\n\nconst setCP = (obj, idx) => {\n  let arr = [0, 1, 2, 3, 4, 5, 6, 7];\n  let tmp;\n  for (let i = 0; i < 8; i++) {\n    tmp = 1 << idx / fact(7 - i) | 0;\n    obj.cp[i] = arr.splice(bitCount(tmp - 1), 1)[0];\n    idx = idx % fact(7 - i);\n  }\n}\n\nconst setUDEP = (obj, idx) => {\n  let arr = [0, 1, 2, 3, 4, 5, 6, 7];\n  let tmp;\n  for (let i = 0; i < 8; i++) {\n    tmp = 1 << idx / fact(7 - i) | 0;\n    obj.ep[i] = arr.splice(bitCount(tmp - 1), 1)[0];\n    idx = idx % fact(7 - i);\n  }\n}\n\nconst setESlice2 = (obj, idx) => {\n  let arr = [8, 9, 10, 11];\n  let tmp;\n  for (let i = 0; i < 4; i++) {\n    tmp = 1 << idx / fact(3 - i) | 0;\n    obj.ep[i + 8] = arr.splice(bitCount(tmp - 1), 1)[0];\n    idx = idx % fact(3 - i);\n  }\n}\n\nconst setEP = (obj, idx) => {\n  let arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n  let tmp;\n  for (let i = 0; i < 12; i++) {\n    tmp = 1 << idx / fact(11 - i) | 0;\n    obj.ep[i] = arr.splice(bitCount(tmp - 1), 1)[0];\n    idx = idx % fact(11 - i);\n  }\n}\n\nconst getCornerParity = (idx) => {\n  let tmp;\n  let p = 0;\n  for (let i = 0; i < 8; i++) {\n    tmp = 1 << idx / fact(7 - i) | 0;\n    p += bitCount(tmp - 1);\n    idx = idx % fact(7 - i);\n  }\n  return p & 1;\n}\n\nconst getEdgeParity = (idx) => {\n  let tmp;\n  let p = 0;\n  for (let i = 0; i < 12; i++) {\n    tmp = 1 << idx / fact(11 - i) | 0;\n    p += bitCount(tmp - 1);\n    idx = idx % fact(11 - i);\n  }\n  return p & 1;\n}\n\nconst initTable = () => {\n  initTwistTable();\n  initFlipTable();\n  initESliceTable();\n  initCPTable();\n  initUDEPTable();\n  initESliceTable2();\n}\n\nconst initTwistTable = () => {\n  twistTable = create2DArray(2187, 18);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 2187; i++) {\n    setTwist(obj_0, i);\n    for (j = 0; j < 18; j++) {\n      twistTable[i][j] = getTwist(obj_0.apply(moveObject[j]));\n    }\n  }\n}\n\nconst initFlipTable = () => {\n  flipTable = create2DArray(2048, 18);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 2048; i++) {\n    setFlip(obj_0, i);\n    for (j = 0; j < 18; j++) {\n      flipTable[i][j] = getFlip(obj_0.apply(moveObject[j]));\n    }\n  }\n}\n\nconst initESliceTable = () => {\n  eSliceTable = create2DArray(495, 18);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 495; i++) {\n    setESlice(obj_0, i);\n    for (j = 0; j < 18; j++) {\n      eSliceTable[i][j] = getESlice(obj_0.apply(moveObject[j]));\n    }\n  }\n}\n\nconst initCPTable = () => {\n  cPTable = create2DArray(40320, 10);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 40320; i++) {\n    setCP(obj_0, i);\n    for (j = 0; j < 10; j++) {\n      cPTable[i][j] = getCP(obj_0.apply(moveObject[restrictedMove[j]]));\n    }\n  }\n}\n\nconst initUDEPTable = () => {\n  UDEPTable = create2DArray(40320, 10);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 40320; i++) {\n    setUDEP(obj_0, i);\n    for (j = 0; j < 10; j++) {\n      UDEPTable[i][j] = getUDEP(obj_0.apply(moveObject[restrictedMove[j]]));\n    }\n  }\n}\n\nconst initESliceTable2 = () => {\n  eSliceTable2 = create2DArray(24, 10);\n  let obj_0 = new ArrayCube()\n  let i, j;\n  for (i = 0; i < 24; i++) {\n    setESlice2(obj_0, i);\n    for (j = 0; j < 10; j++) {\n      eSliceTable2[i][j] = getESlice2(obj_0.apply(moveObject[restrictedMove[j]]));\n    }\n  }\n}\n\nconst initPrun = () => {\n  initTwistESlicePrun();\n  initFlipESlicePrun();\n  initCPESlicePrun();\n  initUDEPESlicePrun();\n}\n\nconst initTwistESlicePrun = () => {\n  twistESlicePrun = Array(1082565);\n  twistESlicePrun.fill(15);\n\n  let children1, children2, done, depth, i, j;\n\n  twistESlicePrun[0] = 0;\n  done = 1;\n  depth = 0;\n  while (done < 1082565) {\n    for (i = 0; i < 1082565; i++) {\n      if (twistESlicePrun[i] !== depth) {\n        continue;\n      }\n      \n      children1 = twistTable[i / 495 | 0];\n      children2 = eSliceTable[i % 495];\n      for (j = 0; j < 18; j++) {\n        if (twistESlicePrun[children1[j] * 495 + children2[j]] === 15) {\n          twistESlicePrun[children1[j] * 495 + children2[j]] = depth + 1;\n          done++\n        }\n      }\n    }\n    depth++;\n  }\n}\n\nconst initFlipESlicePrun = () => {\n  flipESlicePrun = Array(1013760);\n  flipESlicePrun.fill(15);\n\n  let children1, children2, done, depth, i, j;\n\n  flipESlicePrun[0] = 0;\n  done = 1;\n  depth = 0;\n  while (done < 1013760) {\n    for (i = 0; i < 1013760; i++) {\n      if (flipESlicePrun[i] !== depth) {\n        continue;\n      }\n      \n      children1 = flipTable[i / 495 | 0];\n      children2 = eSliceTable[i % 495];\n      for (j = 0; j < 18; j++) {\n        if (flipESlicePrun[children1[j] * 495 + children2[j]] === 15) {\n          flipESlicePrun[children1[j] * 495 + children2[j]] = depth + 1;\n          done++\n        }\n      }\n    }\n    depth++;\n  }\n}\n\nconst initCPESlicePrun = () => {\n  cPESlicePrun = Array(967680);\n  cPESlicePrun.fill(15);\n\n  let children1, children2, done, depth, i, j;\n\n  cPESlicePrun[0] = 0;\n  done = 1;\n  depth = 0;\n  while (done < 967680) {\n    for (i = 0; i < 967680; i++) {\n      if (cPESlicePrun[i] !== depth) {\n        continue;\n      }\n      \n      children1 = cPTable[i / 24 | 0];\n      children2 = eSliceTable2[i % 24];\n      for (j = 0; j < 10; j++) {\n        if (cPESlicePrun[children1[j] * 24 + children2[j]] === 15) {\n          cPESlicePrun[children1[j] * 24 + children2[j]] = depth + 1;\n          done++\n        }\n      }\n    }\n    depth++;\n  }\n}\n\nconst initUDEPESlicePrun = () => {\n  UDEPESlicePrun = Array(967680);\n  UDEPESlicePrun.fill(15);\n\n  let children1, children2, done, depth, i, j;\n\n  UDEPESlicePrun[0] = 0;\n  done = 1;\n  depth = 0;\n  while (done < 967680) {\n    for (i = 0; i < 967680; i++) {\n      if (UDEPESlicePrun[i] !== depth) {\n        continue;\n      }\n      \n      children1 = UDEPTable[i / 24 | 0];\n      children2 = eSliceTable2[i % 24];\n      for (j = 0; j < 10; j++) {\n        if (UDEPESlicePrun[children1[j] * 24 + children2[j]] === 15) {\n          UDEPESlicePrun[children1[j] * 24 + children2[j]] = depth + 1;\n          done++\n        }\n      }\n    }\n    depth++;\n  }\n}\n\nclass ArrayCube {\n  constructor(cp, co, ep, eo) {\n    this.cp = cp ? cp : [0, 1, 2, 3, 4, 5, 6, 7]\n    this.co = co ? co : [0, 0, 0, 0, 0, 0, 0, 0]\n    this.ep = ep ? ep : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n    this.eo = eo ? eo : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }\n\n  apply(move) {\n    return new ArrayCube(\n      this.cp.map((cur, idx) => this.cp[move.cp[idx]]),\n      this.co.map((cur, idx) => (this.co[move.cp[idx]] + move.co[idx]) % 3),\n      this.ep.map((cur, idx) => this.ep[move.ep[idx]]),\n      this.eo.map((cur, idx) => (this.eo[move.ep[idx]] + move.eo[idx]) % 2)\n    )\n  }\n\n  copy() {\n    return new ArrayCube(\n      this.cp,\n      this.co,\n      this.ep,\n      this.eo\n    )\n  }\n\n  toIndexPhase1() {\n    return new IndexCubePhase1(\n      getTwist(this),\n      getFlip(this),\n      getESlice(this),\n      []\n    )\n  }\n\n  toIndexPhase2() {\n    return new IndexCubePhase2(\n      getCP(this),\n      getUDEP(this),\n      getESlice2(this),\n      []\n    )\n  }\n}\n\nclass IndexCubePhase1 {\n  constructor(twist, flip, eslice, move) {\n    this.twist = twist ? twist : 0\n    this.flip = flip ? flip : 0\n    this.eslice = eslice ? eslice : 0\n    this.move = move ? move : []\n  }\n\n  apply(move) {\n    let newTwist, newFlip, newESlice, newMove\n    newTwist = twistTable[this.twist][move]\n    newFlip = flipTable[this.flip][move]\n    newESlice = eSliceTable[this.eslice][move]\n    newMove = this.move.slice()\n    newMove.push(move)\n    return new IndexCubePhase1(\n      newTwist,\n      newFlip,\n      newESlice,\n      newMove\n    )\n  }\n\n  toArray() {\n    return\n  }\n}\n\nclass IndexCubePhase2 {\n  constructor(cp, udep, eslice2, move) {\n    this.cp = cp ? cp : 0\n    this.udep = udep ? udep : 0\n    this.eslice2 = eslice2 ? eslice2 : 0\n    this.move = move ? move : []\n  }\n\n  apply(move) {\n    let _move = restrictedMove.indexOf(move)\n    let newCp, newUDEP, newESlice2, newMove\n    newCp = cPTable[this.cp][_move]\n    newUDEP = UDEPTable[this.udep][_move]\n    newESlice2 = eSliceTable2[this.eslice2][_move]\n    newMove = this.move.slice()\n    newMove.push(move)\n    return new IndexCubePhase2(\n      newCp,\n      newUDEP,\n      newESlice2,\n      newMove\n    )\n  }\n\n  toArray() {\n    return\n  }\n}\n\nconst search = (root, max) => {\n  let stack, _stack, root1, root2, _root\n\n  root1 = root.toIndexPhase1()\n\n  for (let depth = 10; depth <= 13; depth++) {\n    stack = new Stack()\n    stack.push(root1)\n    let cur, nextMove, nextFace, curFace\n    while(stack.size() > 0) {\n      cur = stack.pop();\n      if(cur.move.length === depth && cur.twist === 0 && cur.flip === 0 && cur.eslice === 0) {\n        _root = root.copy()\n        for (let i = 0; i < cur.move.length; i++) {\n          _root = _root.apply(moveObject[cur.move[i]])\n        }\n        root2 = _root.toIndexPhase2()\n\n        for (let _depth = 0; _depth <= max - cur.move.length; _depth++) {\n          _stack = new Stack()\n          _stack.push(root2)\n          let _cur, _nextMove, _nextFace, _curFace\n          while(_stack.size() > 0) {\n            _cur = _stack.pop();\n            if(_cur.cp === 0 && _cur.udep === 0 && _cur.eslice2 === 0) {\n              return cur.move.concat(_cur.move)\n            }\n\n            if (_cur.move.length + Math.max(cPESlicePrun[_cur.cp * 24 + _cur.eslice2], UDEPESlicePrun[_cur.udep * 24 + _cur.eslice2]) > _depth) {\n              continue;\n            }\n\n            for (let i = 0; i < 10; i++) {\n              _nextMove = restrictedMove[i]\n              _nextFace = _nextMove / 3 | 0;\n              _curFace = _cur.move.length === 0 ? -1 : _cur.move[_cur.move.length - 1] / 3 | 0;\n              if (_nextFace % 3 !== _curFace % 3 || _nextFace > _curFace) {\n                _stack.push(_cur.apply(_nextMove));\n              }\n            }\n          }\n        }\n      }\n  \n      if (cur.move.length + Math.max(twistESlicePrun[cur.twist * 495 + cur.eslice], flipESlicePrun[cur.flip * 495 + cur.eslice]) > depth) {\n        continue;\n      }\n  \n      for (nextMove = 0; nextMove < 18; nextMove++) {\n        nextFace = nextMove / 3 | 0;\n        curFace = cur.move.length === 0 ? -1 : cur.move[cur.move.length - 1] / 3 | 0;\n        if (nextFace % 3 !== curFace % 3 || nextFace > curFace) {\n          stack.push(cur.apply(nextMove));\n        }\n      }\n    }\n  }\n\n  return null\n}\n\nconst getRandomState = (seed) => {\n  let cp, co, ep, eo;\n  let random = new Random(seed);\n  let obj = new ArrayCube();\n  do {\n    cp = random.randomInt(40320);\n    ep = random.randomInt(479001600);\n  } while (getCornerParity(cp) !== getEdgeParity(ep))\n  co = random.randomInt(2187);\n  eo = random.randomInt(2048);\n\n  setCP(obj, cp);\n  setTwist(obj, co);\n  setEP(obj, ep);\n  setFlip(obj, eo)\n  \n  return obj;\n}\n\nconst cancelMoves = (moves) => {\n  let l, faceList, axisList, suffixList, newFaceList, newAxisList, newSuffixList, cancelled, ret;\n  l = moves.length;\n  faceList = Array(l);\n  axisList = Array(l);\n  suffixList = Array(l);\n  for (let i = 0; i < l; i++) {\n    faceList[i] = moves[i] / 3 | 0;\n    axisList[i] = faceList[i] % 3;\n    suffixList[i] = moves[i] % 3\n  }\n  \n  do {\n    cancelled = 0;\n    l = faceList.length;\n\n    for (let i = 0; i < l - 1; i++) {\n      if (axisList[i] === axisList[i + 1] && faceList[i] > faceList[i + 1]) {\n        swapElement(faceList, i);\n        swapElement(axisList, i);\n        swapElement(suffixList, i);\n      }\n    }\n\n    for (let i = 0; i < l - 1; i++) {\n      if (faceList[i] === faceList[i + 1]) {\n        cancelled++;\n        suffixList[i] = (suffixList[i] + suffixList[i + 1] + 1) % 4;\n        suffixList[i + 1] = 3;\n      }\n    }\n\n    newFaceList = [];\n    newAxisList = [];\n    newSuffixList = [];\n\n    for (let i = 0; i < l; i++) {\n      if (suffixList[i] !== 3) {\n        newFaceList.push(faceList[i]);\n        newAxisList.push(axisList[i]);\n        newSuffixList.push(suffixList[i]);\n      }\n    }\n\n    faceList = newFaceList.slice();\n    axisList = newAxisList.slice();\n    suffixList = newSuffixList.slice();\n  } while (cancelled > 0)\n\n  ret = Array(faceList.length);\n  for (let i = 0; i < faceList.length; i++) {\n    ret[i] = faceList[i] * 3 + suffixList[i];\n  }\n  return ret;\n}\n\nconst swapElement = (arr, idx) => {\n  arr.splice(idx, 2, arr[idx + 1], arr[idx]);\n}\n\nconst initUtil = () => {\n  Cnk = create2DArray(12, 12);\n  for (let i = 0; i < 12; i++) {\n    Cnk[i].fill(0);\n    Cnk[i][0] = 1;\n    Cnk[i][i] = 1;\n    for (let j = 1; j < i; j++) {\n      Cnk[i][j] = Cnk[i - 1][j - 1] + Cnk[i - 1][j];\n    }\n  }\n\n  moveName = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\", \"D\", \"D2\", \"D'\", \"B\", \"B2\", \"B'\", \"L\", \"L2\", \"L'\"];\n\n  moveObject = Array(18);\n  moveObject[U * 3] = new ArrayCube(\n    [3, 0, 1, 2, 4, 5, 6, 7],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [4, 5, 2, 3, 1, 0, 6, 7, 8, 9, 10, 11],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  )\n  moveObject[F * 3] = new ArrayCube(\n    [1, 7, 2, 3, 0, 5, 6, 4],\n    [1, 2, 0, 0, 2, 0, 0, 1],\n    [9, 1, 2, 8, 4, 5, 6, 7, 0, 3, 10, 11],\n    [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0]\n  );\n  moveObject[R * 3] = new ArrayCube(\n    [4, 1, 2, 0, 5, 3, 6, 7],\n    [2, 0, 0, 1, 1, 2, 0, 0],\n    [0, 1, 2, 3, 8, 5, 6, 11, 7, 9, 10, 4],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  );\n  moveObject[D * 3] = new ArrayCube(\n    [0, 1, 2, 3, 7, 4, 5, 6],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 1, 7, 6, 4, 5, 2, 3, 8, 9, 10, 11],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  );\n  moveObject[B * 3] = new ArrayCube(\n    [0, 1, 3, 5, 4, 6, 2, 7],\n    [0, 0, 1, 2, 0, 1, 2, 0],\n    [0, 11, 10, 3, 4, 5, 6, 7, 8, 9, 1, 2],\n    [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]\n  );\n  moveObject[L * 3] = new ArrayCube(\n    [0, 2, 6, 3, 4, 5, 7, 1],\n    [0, 1, 2, 0, 0, 0, 1, 2],\n    [0, 1, 2, 3, 4, 10, 9, 7, 8, 5, 6, 11],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  );\n  for (let i = 0; i < 6; i++) {\n    moveObject[i * 3 + 1] = moveObject[i * 3].apply(moveObject[i * 3])\n    moveObject[i * 3 + 2] = moveObject[i * 3 + 1].apply(moveObject[i * 3])\n  }\n\n  restrictedMove = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\n}\n\nconst bitCount = (bits) =>{\n  bits = (bits & 0x55555555) + (bits >> 1 & 0x55555555);\n  bits = (bits & 0x33333333) + (bits >> 2 & 0x33333333);\n  bits = (bits & 0x0f0f0f0f) + (bits >> 4 & 0x0f0f0f0f);\n  bits = (bits & 0x00ff00ff) + (bits >> 8 & 0x00ff00ff);\n  return (bits & 0x0000ffff) + (bits >>16 & 0x0000ffff);\n}\n\nconst fact = (n) => {\n  let fact = 1;\n  for (let i = 1; i <= n; i++) {\n    fact *= i;\n  }\n  return fact;\n}\n\nconst create2DArray = (l1, l2) => {\n  let ret = Array(l1);\n  for (let i = 0; i < l1; i++){\n    ret[i] = Array(l2);\n  }\n  return ret;\n}\n\nclass Random {\n  constructor(seed) {\n    this.x = 123456789;\n    this.y = 362436069;\n    this.z = 521288629;\n    this.w = seed ? seed : Math.floor(Math.random() * Date.now());\n  }\n  \n  _random() {\n    let t;\n \n    t = this.x ^ (this.x << 11);\n    this.x = this.y; this.y = this.z; this.z = this.w;\n    return this.w = (this.w ^ (this.w >>> 19)) ^ (t ^ (t >>> 8)); \n  }\n  \n  randomInt(n) {\n    const r = Math.abs(this._random());\n    return (r % n);\n  }\n}\n\nclass Stack {\n  constructor() {\n    this.heap = [];\n  }\n\n  empty() {\n    if (this.heap.length === 0) return true;\n    return false;\n  }\n\n  size() {\n    return this.heap.length;\n  }\n\n  top() {\n    return this.heap[0];\n  }\n \n  push(item) {\n    this.heap.unshift(item);\n  }\n  \n  pop() {\n    return this.heap.shift();\n  }\n}\n\nconst initialize = () => {\n  if (!initialized) {\n    initUtil();\n    initTable();\n    initPrun();\n    initialized = true;\n  }\n}\n\nconst solve = (scramble, max = 22) => {\n  // console.log('scramble: ' + scramble);\n  let arr = scramble.split(' ');\n  let obj = new ArrayCube()\n  let _solution;\n  let solution = '';\n\n  for (let i = 0; i < arr.length; i++) {\n    if (moveName.indexOf(arr[i]) >= 0) obj = obj.apply(moveObject[moveName.indexOf(arr[i])])\n  }\n\n  _solution = search(obj, max);\n  if (_solution == null) {\n    return 'Error';\n  }\n  _solution = cancelMoves(_solution);\n  _solution.forEach((val) => {\n    solution += moveName[val] + ' '\n  })\n  // console.log('solution: ' + solution);\n  // console.log(_solution.length + ' moves');\n  return solution;\n}\n\nconst getScramble = (seed, max = 22) => {\n  let scr, solution, ret;\n\n  scr = getRandomState(seed);\n  solution = search(scr, max);\n  if (solution == null) {\n    return 'Error';\n  }\n  solution = cancelMoves(solution);\n  solution.reverse();\n  ret = '';\n  solution.forEach((val) => {\n    ret += moveName[val] + ' '\n  })\n  console.log(ret + '[' + solution.length + ' moves]')\n  return ret;\n}\n\nreturn {\n  initialize: initialize,\n  solve: solve,\n  getScramble: getScramble,\n}\n\n})();\n\nexport default twophase","import React, {useEffect, useState} from \"react\";\nimport {AppBar, Box, Button, TextField, Toolbar, Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\"\nimport twoPhase from './lib/twophase'\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {RouterState} from \"./types/routerState\";\n\nconst Home = (props: RouteComponentProps) => {\n    const useStyles = makeStyles(() => createStyles({\n        container: {\n            margin: '0 auto',\n            padding: '20px',\n            maxWidth: '700px'\n        },\n        box: {\n            marginBottom: '10px'\n        },\n        error: {\n            color: \"red\"\n        },\n        button: {\n            marginLeft: '20px'\n        }\n    }))\n    const classes = useStyles()\n\n    const [algList, setAlgList] = useState(Array<string>())\n    const [isError, setIsError] = useState(false)\n\n    useEffect(() => {\n        twoPhase.initialize()\n        if (props.location.state) {\n            setAlgList((props.location.state as RouterState).algList)\n        }\n    }, [props.location.state])\n\n    const handleAlgListChanged = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setAlgList(event.target.value.split(\"\\n\"))\n    }\n\n    const onClickTrainerButton = () => {\n        if (algList.length === 0) {\n            setIsError(true)\n            setTimeout(() => {\n                setIsError(false)\n            }, 3000)\n            return\n        }\n        props.history.push({\n            pathname: \"trainer\",\n            state: {\n                algList: algList\n            }\n        })\n    }\n\n    const onClickRecapTrainerButton = () => {\n        if (algList.length === 0) {\n            setIsError(true)\n            setTimeout(() => {\n                setIsError(false)\n            }, 3000)\n            return\n        }\n        props.history.push({\n            pathname: \"recap_trainer\",\n            state: {\n                algList: algList\n            }\n        })\n    }\n\n    return (\n        <div>\n            <AppBar position={\"relative\"}>\n                <Toolbar>\n                    <Typography>Alg Trainer</Typography>\n                </Toolbar>\n            </AppBar>\n            <Box className={classes.container} maxWidth={\"xs\"} display={\"flex\"} flexDirection={\"column\"}>\n                <Typography className={classes.box}>\n                    複数の手順を練習できるツールです。<br/><br/>\n                    練習したい手順を入力してください。<br/>\n                    1行1手順となり、改行すると別手順とみなされます。<br/>\n                    使える記号は以下の通りです。<br />\n                    U, R, F, D, L, B, Uw, Rw, Fw, Dw, Lw, Bw, u, r, f, d, l, b, M, S, E, x, y, z<br />\n                    記号はすべて半角で入力してください。<br />\n                    またプライム記号は必ずシングルクォーテーションを使い、記号間には必ず半角スペースを置いてください。\n                </Typography>\n                <Box className={classes.box} display={\"flex\"} justifyContent={\"center\"}>\n                    <Button variant=\"contained\" size=\"large\" onClick={onClickTrainerButton}>\n                        ランダムで練習する\n                    </Button>\n                    <Button className={classes.button} variant=\"contained\" size=\"large\" onClick={onClickRecapTrainerButton}>\n                        一巡する\n                    </Button>\n                </Box>\n                {isError &&\n                <Box className={classes.box} display={\"flex\"} justifyContent={\"center\"}>\n                    <Typography className={classes.error}>\n                        手順が入力されていません\n                    </Typography>\n                </Box>\n                }\n                <TextField className={classes.box}\n                           id=\"textField\"\n                           multiline\n                           rows={10}\n                           variant=\"outlined\"\n                           defaultValue={algList.join(\"\\n\")}\n                           onChange={handleAlgListChanged}/>\n            </Box>\n        </div>\n    )\n}\n\nexport default Home\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {AppBar, Box, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport twoPhase from './lib/twophase'\nimport algUtil from './lib/algUtil'\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {RouterState} from \"./types/routerState\";\n\nconst Trainer = (props: RouteComponentProps) => {\n    const useStyles = makeStyles(() => ({\n        container: {\n            margin: '0 auto',\n            padding: '20px',\n            maxWidth: '700px'\n        },\n        box: {\n            marginBottom: '10px'\n        },\n        prevScrambleBlock: {\n            backgroundColor: '#ededed'\n        },\n        scrambleBlock: {\n            backgroundColor: '#dddddd'\n        },\n        imageBlock: {\n            backgroundColor: '#eeeeee'\n        },\n        timerBlock: {\n            backgroundColor: '#ededed'\n        },\n        timeListTitleBlock: {\n            backgroundColor: '#dddddd'\n        },\n        timeListBlock: {\n            backgroundColor: '#dddddd',\n            height: \"250px\",\n            overflow: \"scroll\",\n        }\n    }))\n    const classes = useStyles()\n\n    const intervalRef = useRef<NodeJS.Timeout | null>(null);\n    const [time, setTime] = useState(0); // センチ秒\n    const [algList, setAlgList] = useState(Array<string>())\n    const [isTimerRunning, setIsTimerRunning] = useState(false)\n    const [timeList, setTimeList] = useState(Array<string>())\n    const [scramble, setScramble] = useState(\"\")\n    const [prevScramble, setPrevScramble] = useState(\"\")\n    const [zbllList, setZbllList] = useState(Array<string>())\n    const [zblsFrList, setZblsFrList] = useState(Array<string>())\n    const [zblsBrList, setZblsBrList] = useState(Array<string>())\n    const [zblsFlList, setZblsFlList] = useState(Array<string>())\n    const [zblsBlList, setZblsBlList] = useState(Array<string>())\n\n    useEffect(() => {\n        fetch(process.env.PUBLIC_URL + \"/zbll.txt\")\n            .then(res => res.text())\n            .then(text => {\n                    const list = text.split(\"\\n\")\n                    setZbllList(list)\n                }\n            )\n        fetch(process.env.PUBLIC_URL + \"/zbls_fr.txt\")\n            .then(res => res.text())\n            .then(text => {\n                    const list = text.split(\"\\n\")\n                    setZblsFrList(list)\n                }\n            )\n        fetch(process.env.PUBLIC_URL + \"/zbls_br.txt\")\n            .then(res => res.text())\n            .then(text => {\n                    const list = text.split(\"\\n\")\n                    setZblsBrList(list)\n                }\n            )\n        fetch(process.env.PUBLIC_URL + \"/zbls_fl.txt\")\n            .then(res => res.text())\n            .then(text => {\n                    const list = text.split(\"\\n\")\n                    setZblsFlList(list)\n                }\n            )\n        fetch(process.env.PUBLIC_URL + \"/zbls_bl.txt\")\n            .then(res => res.text())\n            .then(text => {\n                    const list = text.split(\"\\n\")\n                    setZblsBlList(list)\n                }\n            )\n    }, [])\n\n    useEffect(() => {\n        twoPhase.initialize()\n        if (props.location.state) {\n            const algListInState = props.location.state as RouterState\n            setAlgList(algListInState.algList)\n            if (zbllList.length > 0 && zblsFrList.length > 0 && zblsBrList.length > 0 && zblsFlList.length > 0 && zblsBlList.length > 0) {\n                startGame(algListInState.algList)\n            }\n        } else {\n            props.history.push(\"/\")\n        }\n    }, [props.history, props.location.state, zbllList, zblsFrList, zblsBrList, zblsFlList, zblsBlList])\n\n    document.onkeydown = (event) => {\n        if (event.code === \"Space\") {\n            operateGame()\n        }\n    }\n\n    const onTouchTimerView = () => {\n        operateGame()\n    }\n\n    const operateGame = () => {\n        if (isTimerRunning) { // ソルブ中\n            endGame()\n            setIsTimerRunning(false)\n        } else { // 停止中\n            setTime(0)\n            startTimer()\n            setIsTimerRunning(true)\n        }\n    }\n\n    const startGame = (list: Array<string>) => {\n        const aufList = [\"\", \" U\", \" U'\", \" U2\"]\n        const slotIndex = Math.floor(Math.random() * 3)\n        const zblsIndex = Math.floor(Math.random() * zblsFrList.length)\n        const auf1Index = Math.floor(Math.random() * aufList.length)\n        const zbllIndex = Math.floor(Math.random() * zbllList.length)\n        const auf2Index = Math.floor(Math.random() * aufList.length)\n        let alg = \"\"\n        if (slotIndex === 0) {\n            alg = `${zblsFrList[zblsIndex]}${aufList[auf1Index]} ${zbllList[zbllIndex]}${aufList[auf2Index]}`\n        } else if (slotIndex === 1) {\n            alg = `${zblsBrList[zblsIndex]}${aufList[auf1Index]} ${zbllList[zbllIndex]}${aufList[auf2Index]}`\n        } else if (slotIndex === 2) {\n            alg = `${zblsFlList[zblsIndex]}${aufList[auf1Index]} ${zbllList[zbllIndex]}${aufList[auf2Index]}`\n        }\n        // } else if (slotIndex === 3) {\n        //     alg = `${zblsBlList[zblsIndex]}${aufList[auf1Index]} ${zbllList[zbllIndex]}${aufList[auf2Index]}`\n        // }\n        const [newRotationLessSolutionList, newRotationList] = algUtil.makeRotationLessAlg(alg.split(\" \"))\n        setScramble(twoPhase.solve(newRotationLessSolutionList.join(\" \")))\n    }\n\n    const endGame = () => {\n        stopTimer()\n        if (time / 100 / 60 < 1) {\n            setTimeList([\n                ...timeList,\n                moment(time * 10).format('s.SS')\n            ])\n        } else {\n            setTimeList([\n                ...timeList,\n                moment(time * 10).format('m:ss.SS')\n            ])\n        }\n        setPrevScramble(scramble)\n        startGame(algList)\n    }\n\n    const startTimer = () => {\n        if (intervalRef.current !== null) return;\n        intervalRef.current = setInterval(() => {\n            setTime(c => c + 1);\n        }, 10);\n    }\n\n    const stopTimer = () => {\n        if (intervalRef.current === null) return;\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n    }\n\n    return (\n        <div>\n            <AppBar position={\"relative\"}>\n                <Toolbar>\n                    <Typography>Alg Trainer</Typography>\n                </Toolbar>\n            </AppBar>\n            <Box className={classes.container} maxWidth={\"xs\"} display={\"flex\"} flexDirection={\"column\"}>\n                <Box className={classes.box} display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Button variant='contained' onClick={() => props.history.push({\n                        pathname: \"/\",\n                        state: {\n                            algList: algList\n                        }\n                    })}>\n                        戻る\n                    </Button>\n                </Box>\n                <Typography className={classes.box}>\n                    スタート/ストップ方法<br/>\n                    PC: スペースキー押下<br/>\n                    スマホ: タイマー部分タップ\n                </Typography>\n                <Box className={classes.scrambleBlock} display={\"flex\"} justifyContent={\"center\"}>\n                    <Typography>\n                        Scramble: {scramble}\n                    </Typography>\n                </Box>\n                <Box display={\"flex\"}>\n                    <Box className={classes.imageBlock} display={\"flex\"}>\n                        <img\n                            src={\"https://cubing.net/api/visualcube/?fmt=svg&r=x-30y30z15&bg=t&size=150&pzl=3&alg=\" + scramble.replace(/\\s+/g, \"\")}\n                            alt={\"\"}\n                        />\n                    </Box>\n                    <Box className={classes.timerBlock}\n                         display={\"flex\"}\n                         justifyContent={\"center\"}\n                         alignItems={\"center\"}\n                         flexGrow={1}\n                         onTouchStart={onTouchTimerView}>\n                        <Typography variant={\"h4\"}>\n                            {moment(time * 10).format('mm:ss.SS')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <Box className={classes.timeListTitleBlock} display={\"flex\"}>\n                    <Typography>\n                        Time List:\n                    </Typography>\n                </Box>\n                <Box className={classes.timeListBlock} display={\"flex\"}>\n                    <Typography>\n                        &nbsp; {timeList.join(\", \")}\n                    </Typography>\n                </Box>\n                <Box className={classes.prevScrambleBlock} display={\"flex\"} justifyContent={\"center\"}>\n                    <Typography>\n                        Prev Scramble: {prevScramble}\n                    </Typography>\n                </Box>\n            </Box>\n        </div>\n    )\n}\n\nexport default Trainer\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {AppBar, Box, Button, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport twoPhase from './lib/twophase'\nimport algUtil from './lib/algUtil'\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {RouterState} from \"./types/routerState\";\n\nconst RecapTrainer = (props: RouteComponentProps) => {\n    const useStyles = makeStyles(() => ({\n        container: {\n            margin: '0 auto',\n            padding: '20px',\n            maxWidth: '700px'\n        },\n        box: {\n            marginBottom: '10px'\n        },\n        scrambleBlock: {\n            backgroundColor: '#dddddd'\n        },\n        imageBlock: {\n            backgroundColor: '#eeeeee'\n        },\n        timerBlock: {\n            backgroundColor: '#ededed'\n        },\n        timeListTitleBlock: {\n            backgroundColor: '#dddddd'\n        },\n        timeListBlock: {\n            backgroundColor: '#dddddd',\n            height: \"250px\",\n            overflow: \"scroll\",\n        }\n    }))\n    const classes = useStyles()\n\n    const intervalRef = useRef<NodeJS.Timeout | null>(null);\n    const [time, setTime] = useState(0); // センチ秒\n    const [algList, setAlgList] = useState(Array<string>())\n    const [isTimerRunning, setIsTimerRunning] = useState(false)\n    const [timeList, setTimeList] = useState(Array<string>())\n    const [scramble, setScramble] = useState(\"\")\n    const [algCount, setAlgCount] = useState(0)\n    const [finishText, setFinishText] = useState(\"\")\n\n    useEffect(() => {\n        twoPhase.initialize()\n        if (props.location.state) {\n            const algListInState = props.location.state as RouterState\n            const randomAlgList = shuffleArray(algListInState.algList)\n            setAlgList(randomAlgList)\n            startGame(randomAlgList)\n        } else {\n            props.history.push(\"/\")\n        }\n    }, [props.history, props.location.state])\n\n    document.onkeydown = (event) => {\n        if (event.code === \"Space\") {\n            operateGame()\n        }\n    }\n\n    function shuffleArray(array: Array<string>) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n\n    const onTouchTimerView = () => {\n        operateGame()\n    }\n\n    const operateGame = () => {\n        if (isTimerRunning) { // ソルブ中\n            endGame()\n            setIsTimerRunning(false)\n        } else { // 停止中\n            setTime(0)\n            startTimer()\n            setIsTimerRunning(true)\n        }\n    }\n\n    const startGame = (list: Array<string>) => {\n        if (algCount < list.length) {\n            const alg = list[algCount]\n            const [newRotationLessSolutionList, newRotationList] = algUtil.makeRotationLessAlg(alg.split(\" \"))\n            setScramble(twoPhase.solve(newRotationLessSolutionList.join(\" \")))\n            setAlgCount((i) => i + 1)\n        } else {\n            setScramble(\"\")\n            setFinishText(\"Finish!\")\n        }\n    }\n\n    const endGame = () => {\n        stopTimer()\n        if (time / 100 / 60 < 1) {\n            setTimeList([\n                ...timeList,\n                moment(time * 10).format('s.SS')\n            ])\n        } else {\n            setTimeList([\n                ...timeList,\n                moment(time * 10).format('m:ss.SS')\n            ])\n        }\n        startGame(algList)\n    }\n\n    const startTimer = () => {\n        if (intervalRef.current !== null) return;\n        intervalRef.current = setInterval(() => {\n            setTime(c => c + 1);\n        }, 10);\n    }\n\n    const stopTimer = () => {\n        if (intervalRef.current === null) return;\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n    }\n\n    return (\n        <div>\n            <AppBar position={\"relative\"}>\n                <Toolbar>\n                    <Typography>Alg Trainer</Typography>\n                </Toolbar>\n            </AppBar>\n            <Box className={classes.container} maxWidth={\"xs\"} display={\"flex\"} flexDirection={\"column\"}>\n                <Box className={classes.box} display={\"flex\"} justifyContent={\"space-between\"}>\n                    <Button variant='contained' onClick={() => props.history.push({\n                        pathname: \"/\",\n                        state: {\n                            algList: algList\n                        }\n                    })}>\n                        戻る\n                    </Button>\n                </Box>\n                <Typography className={classes.box}>\n                    スタート/ストップ方法<br/>\n                    PC: スペースキー押下<br/>\n                    スマホ: タイマー部分タップ\n                </Typography>\n                <Box className={classes.scrambleBlock} display={\"flex\"} justifyContent={\"center\"}>\n                    <Typography>\n                        Count: {algCount}/{algList.length}  {finishText}\n                    </Typography>\n                </Box>\n                <Box className={classes.scrambleBlock} display={\"flex\"} justifyContent={\"center\"}>\n                    <Typography>\n                        Scramble: {scramble}\n                    </Typography>\n                </Box>\n                <Box display={\"flex\"}>\n                    <Box className={classes.imageBlock} display={\"flex\"}>\n                        <img\n                            src={\"https://cubing.net/api/visualcube/?fmt=svg&r=x-30y30z15&bg=t&size=150&pzl=3&alg=\" + scramble.replace(/\\s+/g, \"\")}\n                            alt={\"\"}\n                        />\n                    </Box>\n                    <Box className={classes.timerBlock}\n                         display={\"flex\"}\n                         justifyContent={\"center\"}\n                         alignItems={\"center\"}\n                         flexGrow={1}\n                         onTouchStart={onTouchTimerView}>\n                        <Typography variant={\"h4\"}>\n                            {moment(time * 10).format('mm:ss.SS')}\n                        </Typography>\n                    </Box>\n                </Box>\n                <Box className={classes.timeListTitleBlock} display={\"flex\"}>\n                    <Typography>\n                        Time List:\n                    </Typography>\n                </Box>\n                <Box className={classes.timeListBlock} display={\"flex\"}>\n                    <Typography>\n                        &nbsp; {timeList.join(\", \")}\n                    </Typography>\n                </Box>\n            </Box>\n        </div>\n    )\n}\n\nexport default RecapTrainer\n","import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Trainer from \"./Trainer\";\nimport RecapTrainer from \"./RecapTrainer\";\n\nfunction App() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div>\n                <Route exact path='/' component={Home}/>\n                <Route path='/trainer' component={Trainer}/>\n                <Route path='/recap_trainer' component={RecapTrainer}/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}